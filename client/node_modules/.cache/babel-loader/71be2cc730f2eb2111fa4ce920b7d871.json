{"ast":null,"code":"var _jsxFileName = \"/home/predator/Documents/mern/mern_shopping_list/client/src/components/ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; // import uuid from 'uuid';\n\nimport { connect } from 'react-redux'; // it allows us to basically get the state from redux to react component\n\nimport { getItems, deleteItem, addItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types'; //if you have component properties we should put them in proptypes(its kind of validation)\n\nclass ShoppingList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addItem = () => {\n      const name = prompt('Enter Item');\n\n      if (name) {\n        this.setState(state => ({\n          items: [...state.items, {\n            id: uuid(),\n            name\n          }]\n        }));\n      }\n    };\n\n    this.deleteBtn = id => {\n      this.props.deleteItem(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  } //use it when you call an action or making an api request\n\n\n  render() {\n    const items = this.props.allItems.items; // console.log(items);\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Add item\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"shopping-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, items.map(({\n      id,\n      name\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"removeBtn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: this.deleteBtn.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\xD7\"), name))))));\n  }\n\n}\n\nShoppingList.propTypes = {\n  allItems: PropTypes.object.isRequired,\n  getItems: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired\n}; //setting proptypes\n\nconst mapStateToProps = state => ({\n  allItems: state.allitems // we are matching a redux state to a component prop and we named it item because we named it that in our root reducer\n\n}); //will map the state of item to a component property(eg to use it like this.props.items) \n//for only one param we dont need a round bracket \n\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem\n})(ShoppingList); //takes in 2 params: mapStateToProps and any action that we may use in this component","map":{"version":3,"sources":["/home/predator/Documents/mern/mern_shopping_list/client/src/components/ShoppingList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","connect","getItems","deleteItem","addItem","PropTypes","ShoppingList","name","prompt","setState","state","items","id","uuid","deleteBtn","props","componentDidMount","render","allItems","marginBottom","map","bind","propTypes","object","isRequired","func","mapStateToProps","allitems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n// import uuid from 'uuid';\nimport { connect } from 'react-redux'; // it allows us to basically get the state from redux to react component\nimport { getItems, deleteItem, addItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';//if you have component properties we should put them in proptypes(its kind of validation)\n\nclass ShoppingList extends Component {\n\n   componentDidMount() {\n        this.props.getItems();\n   } //use it when you call an action or making an api request\n   \n    addItem = () => {\n        const name = prompt('Enter Item');\n        if(name){\n          this.setState(state => ({\n            items: [...state.items, { id:uuid(), name }]\n          }));\n        }\n      }\n\n      deleteBtn = (id) => {\n            this.props.deleteItem(id);  \n      }\n\n    render() {\n        const {items} = this.props.allItems;\n        // console.log(items);\n        return (\n            <Container>\n                <Button \n                color=\"dark\"\n                style={{marginBottom:'2rem'}}\n                onClick={this.addItem}>\n                \n                Add item\n                \n                </Button>\n\n                <ListGroup>\n                    <TransitionGroup className=\"shopping-list\">\n                        { items.map(({id, name}) => (\n                            <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    \n                                    <Button\n                                        className=\"removeBtn\"\n                                        color=\"danger\"\n                                        size=\"sm\"\n                                        onClick={this.deleteBtn.bind(this, id)}\n                                    >\n                                        &times;\n                                    </Button>\n                                    {name}\n                                </ListGroupItem>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </ListGroup>\n\n            </Container>\n        )\n    }\n}\n\nShoppingList.propTypes = {\n    allItems: PropTypes.object.isRequired,\n    getItems: PropTypes.func.isRequired,\n    deleteItem: PropTypes.func.isRequired\n};//setting proptypes\n\nconst mapStateToProps = state => ({\n\n    allItems: state.allitems // we are matching a redux state to a component prop and we named it item because we named it that in our root reducer\n\n}); //will map the state of item to a component property(eg to use it like this.props.items) \n//for only one param we dont need a round bracket \n\n\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList); //takes in 2 params: mapStateToProps and any action that we may use in this component\n"]},"metadata":{},"sourceType":"module"}